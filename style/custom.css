/* @import url("https://fonts.googleapis.com/css2?family=DotGothic16&display=swap"); */
/* https://fonts.google.com/knowledge/using_type/using_web_fonts */

@font-face {
    font-family: 'DotGothic16';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(../fonts/dotgothic16/v18/v6-QGYjBJFKgyw5nSoDAGH7M6X8.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

:root {
    --bs-letter-spacing: 0.1em;
    --bs-body-font-family: "DotGothic16", sans-serif;
    --bs-dark-color: rgba(0, 0, 0, 0.966);
    /* changing the value dark for a black */
}

body {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    height: 100vh;
    background-color: black;
}

header,
main,
footer {
    display: flex;
    flex-direction: column;
}

main {
    flex-grow: 1;

    letter-spacing: var(--bs-letter-spacing);
}

h1 {
    font-weight: 600;
    letter-spacing: var(--bs-letter-spacing);
}

.avatar {
    object-fit: cover;
    object-position: top;
}

.vertical {
    border-left: 6px dashed rgb(255, 255, 255);
    height: 80%;
    /* TODO: adds overflow */
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    pointer-events: none;
    z-index: 2;
}

.table {
    width: 100%;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);

    th {
        background-color: #007bff;
        color: white;
        text-align: center;
    }

    td {
        text-align: center;
        padding: 1rem;
    }

    tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    tr:hover {
        background-color: rgba(0, 123, 255, 0.1);
    }
}

.scrollable {
    height: 300px;
    overflow: scroll;
}

.btn-custom {
    background-color: transparent;
    border: 2px solid white;
    color: white;
    padding: 12px 24px;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.btn-custom:hover {
    background-color: white;
    color: black;
}

.btn-home-3d {
    box-shadow: 0 0 0 1px #ebebeb inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #adadad, 0 8px 0 1px rgba(0, 0, 0, 0.4), 0 8px 8px 1px rgba(0, 0, 0, 0.5);
    background-color: white;
    border: 2px solid white;
    color: white;
    padding: 12px 24px;
    font-size: 1rem;
    transition: background-color 0.3s, box-shadow 0.3s;
}

.btn-home-3d:hover {
    background-color: #10c60ddf;
    color: rgb(255, 255, 255);
    box-shadow: 0 0 10px 4px rgba(0, 0, 0, 0.7), 0 0 15px 5px rgba(255, 255, 255, 0.3);
}

.btn-warning-3d {
    box-shadow: 0 0 0 1px #f0ad4e inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #eea236, 0 8px 0 1px rgba(0, 0, 0, 0.4), 0 8px 8px 1px rgba(0, 0, 0, 0.5);
    background-color: #f0ad4e;
    margin-right: 10px;
    margin-top: 15px;
    color: white;
    padding: 12px 24px;
    font-size: 1rem;
}

.btn-warning-3d:hover {
    background-color: #f5a739;
    color: rgb(255, 255, 255);
    box-shadow: 0 0 10px 4px rgba(0, 0, 0, 0.7), 0 0 15px 5px rgba(255, 255, 255, 0.3);
}

.btn-warning-3d:active,
.btn-warning-3d:focus {
    background-color: #f0ad4e !important;
    box-shadow: 0 0 0 1px #f0ad4e inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #eea236, 0 8px 0 1px rgba(0, 0, 0, 0.4), 0 8px 8px 1px rgba(0, 0, 0, 0.5) !important;
    border-color: #f0ad4e !important;
}

.text-3d {
    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.8), -2px -2px 10px rgba(255, 255, 255, 0.1);
    transform: perspective(500px) rotateX(10deg);
}

.tresd-body {
    background: linear-gradient(45deg, #10c60d, #243b55);
    background-size: 200% 200%;
    animation: gradientMove 10s infinite;
}

@keyframes gradientMove {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

.icon-play-3d {
    color: white;
}

.nav-link {
    font-size: 1.1rem;
    transition: background-color 0.3s ease;
}

.nav-link:hover {
    background-color: #495057;
    text-decoration: none;
}

.h1-battle {
    line-height: 1.5;
}

.highlight {
    background-color: black;
    color: white;
    padding: 0 5px;
    border-radius: 3px;
    display: inline-block;
    margin-top: 5px;
}

body[data-bs-theme="dark"].mode3D {
    background-image: url('/static/assets/textures/textura.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-blend-mode: hard-light;
}

body[data-bs-theme="dark"].mode3D > a {
    color: fuchsia;
}

.form-switch .form-check-input {
    width: 22px; /* Hacemos el checkbox más pequeño */
    height: 22px; /* Hacemos el checkbox más pequeño */
    border-radius: 4px; /* Borde cuadrado */
    position: relative;
    transition: background-color 0.3s ease, transform 0.3s ease;
    background-color: #aaa; /* Color cuando el checkbox está desactivado (modo normal) */
}

/* Estilo del control deslizante cuando no está activado */
.form-switch .form-check-input {
    width: 30px; /* Hacemos el checkbox más pequeño */
    height: 20px; /* Hacemos el checkbox más pequeño */
    border-radius: 15px; /* Bordes redondeados */
    position: relative;
    transition: background-color 0.3s ease, transform 0.3s ease;
    background-color: #aaa; /* Color cuando el checkbox está desactivado */
}

/* Estilo para el control deslizante (bola) cuando no está activado */
.form-switch .form-check-input:before {
    content: "";
    position: absolute;
    top: 2px;
    left: 2px;
    width: 16px; /* Bola más pequeña */
    height: 16px; /* Bola más pequeña */
    background-color: white;
    border-radius: 50%;
    transition: transform 0.3s ease;
}

/* Estilo cuando el checkbox está activado (más grande y deslizante) */
.form-switch .form-check-input:checked {
    background-color: #4CAF50; /* Color del switch cuando está activado */
    width: 50px; /* Hacemos el switch más grande */
    height: 30px; /* Hacemos el switch más grande */
    border-radius: 15px; /* Bordes redondeados */
}

.form-switch .form-check-input:checked::before {
    transform: translateX(20px); /* Mueve el control deslizante al activar */
    width: 24px; /* Tamaño de la bola cuando está activado */
    height: 24px; /* Tamaño de la bola cuando está activado */
}

/* Estilo adicional para cuando el checkbox está activado y en modo 3D */
.checkbox-activated {
    background-color: #ff5722 !important; /* Cambia el color del checkbox cuando el modo 3D está activado */
    border: 2px solid #fff; /* Borde más visible cuando el modo 3D está activado */
}

/* Minimalista: estilo cuando el checkbox no está activado */
.form-check-input:not(:checked) {
    background-color: #d3d3d3; /* Gris claro cuando no está activado */
    border: 1px solid #bbb; /* Borde sutil */
}

/* Estilos del switch */
.form-switch .form-check-label {
    margin-left: 10px;
    font-size: 12px; /* Hacemos el texto más pequeño cuando no está activado */
    font-weight: normal;
    color: #fff; /* Color blanco para el texto */
}

/* Cuando el checkbox está activado y en modo 3D, hacer el texto más grande */
.form-switch .form-check-input:checked + .form-check-label {
    font-size: 16px; /* Hacer el texto más grande cuando el modo 3D está activado */
}