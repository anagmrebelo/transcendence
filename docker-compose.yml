name: tr

services:

  django:
    container_name: tr-backend
    build:
      context: ./
      dockerfile: django.dockerfile
    depends_on:
      database:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
        restart: true
      sass:
        condition: service_started
        restart: false
      webpack:
        condition: service_started
        restart: false
    entrypoint: ./django-entrypoint.sh
    environment:
      DEBUG: ${DEBUG:-false}
      API_42_ENDPOINT: https://api.intra.42.fr
      API_42_UID: ${API_42_UID}
      API_42_SECRET: ${API_42_SECRET}
      ALLOWED_HOSTS: localhost,dump-ubuntu-barcelona
      SECRET_KEY: tr-secret-key
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME?err}
      DB_USER: ${DB_USER?err}
      DB_PASSWORD: ${DB_PASSWORD?err}
      DB_HOST: database
      DB_PORT: 5432
      DOMAIN: ${DOMAIN?err}
      DOMAIN_URL: ${DOMAIN_URL?err}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DEFAULT_FROM_EMAIL: no-reply@dump-ubuntu-barcelona
      STATIC_URL: /static/
      STATIC_ROOT: static
      MEDIA_URL: /media/
      EMAIL_HOST: mailhog
      EMAIL_USE_TLS: "False"
      EMAIL_USE_SSL: "False"
      EMAIL_PORT: 1025
      EMAIL_USER: tr-mail@tr.mail
      EMAIL_PASSWORD: tr-password
    expose:
      - 80
      - 443
    image: python:3.12-alpine3.20-django
    networks:
      - tr-network
    volumes:
      - ./:/usr/app/

  database:
    container_name: tr-database
    environment:
      POSTGRES_USER: ${DB_USER?err}
      POSTGRES_PASSWORD: ${DB_PASSWORD?err}
      POSTGRES_DB: ${DB_NAME?err}
    expose:
      - 5432
    healthcheck:
      # pg_isready might be configured with more arguments (host, port, user)
      test: ["CMD-SHELL", "pg_isready --dbname ${DB_NAME} --username ${DB_USER}"]
      interval: 1s
      timeout: 8s
      start_period: 4s
      start_interval: 1s
      retries: 4
    image: postgres:16.4-alpine3.20
    networks:
      - tr-network
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/

  redis:
    container_name: tr-redis
    depends_on:
      database:
        condition: service_healthy
        restart: true
    expose:
      - 6379
    image: redis:7.4-alpine
    networks:
      - tr-network

  nginx:
    container_name: tr-server
    image: nginx:1.26-alpine3.20
    depends_on:
      django:
        condition: service_started
        restart: true
      mailhog:
        condition: service_started
        restart: true
    networks:
      - tr-network
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./:/usr/app/
    working_dir: /usr/app/

  mailhog:
    container_name: tr-mail
    expose:
      - 1025
      - 8025
    image: mailhog/mailhog:latest
    networks:
      - tr-network

  npm:
    container_name: tr-util-npm
    command: npm install
    environment:
      DEBUG: ${DEBUG:-false}
    image: node:22.7-alpine3.19
    volumes:
      - ./:/usr/app
    working_dir: /usr/app/

  sass:
    container_name: tr-util-sass
    depends_on:
      npm:
        condition: service_completed_successfully
        restart: true
    environment:
      DEBUG: ${DEBUG:-false}
    entrypoint: ./sass-entrypoint.sh
    image: node:22.7-alpine3.19
    volumes:
      - ./:/usr/app/
    working_dir: /usr/app/

  assets:
    container_name: tr-util-assets
    entrypoint: ./assets-entrypoint.sh
    image: alpine:3.20
    volumes:
      - ./:/usr/app/
    working_dir: /usr/app/

  webpack:
    container_name: tr-util-webpack
    command: npm run build
    depends_on:
      npm:
        condition: service_completed_successfully
        restart: true
    environment:
      DEBUG: ${DEBUG:-false}
    image: node:22.7-alpine3.19
    volumes:
      - ./:/usr/app/
    working_dir: /usr/app/

networks:
  tr-network:
    name: tr-network
